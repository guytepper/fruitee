// @mixin fruit($name, $width, $height, $order) {

//   div[id='#{$name}'] {
//     order: $order;
//     background-image: url('../images/#{$name}.png');
//     background-size: $width, $height, contain;
//   }

// }

@mixin fruit($name, $order, $width: 5.1875em) {
  $background: null;
  
  @if ($name == 'almond') {
    $background: svg-url('<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="48" height="38" viewBox="0 0 48 38"><defs><path id="a" d="M21.7 2.1c1.8 3.1-3.8 11.7-8.9 14.6-4.7 2.7-9.6 1-11.7-2.7C-1 10.2-.2 5.2 4.6 2.4c5-2.9 15.3-3.4 17.1-.3zm26 0c1.8 3.1-3.8 11.7-8.9 14.6-4.7 2.7-9.6 1-11.7-2.7-2.1-3.7-1.3-8.8 3.5-11.5 5-3 15.3-3.5 17.1-.4zm-17 20c1.8 3.1-3.8 11.7-8.9 14.6-4.7 2.7-9.6 1-11.7-2.7-2.1-3.7-1.3-8.8 3.5-11.5 5-3 15.3-3.5 17.1-.4z"/></defs><use xlink:href="#a" overflow="visible" fill-rule="evenodd" clip-rule="evenodd" fill="#d99a57"/><clipPath id="b"><use xlink:href="#a" overflow="visible"/></clipPath><path opacity=".3" clip-path="url(#b)" fill-rule="evenodd" clip-rule="evenodd" fill="#ea7a2f" d="M0 0h48v38H0z"/><path opacity=".3" clip-path="url(#b)" fill-rule="evenodd" clip-rule="evenodd" fill="#93684e" d="M9 19.9h22V38H9z"/><path d="M31 38V21.9L9 34.6V38h22zm-9-20V1.9L0 14.6V18h22zm26 0V1.9L26 14.6V18h22z" opacity=".5" clip-path="url(#b)" fill-rule="evenodd" clip-rule="evenodd" fill="#93684e"/></svg>');
  }

  @else if ($name == 'apple') {
    $background: svg-url('<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="43.1" height="56.9" viewBox="0 0 43.1 56.9"><defs><path id="a" d="M29 18.3c-3 0-5.8 1.1-8 2.3-2.2-1.3-5-2.3-8-2.3-7.2 0-13 5.8-13 13 0 13 8 23 15 23 2.3 0 4.5-1 6-1.9 1.5.9 3.7 1.9 6 1.9 7 0 15-10 15-23 0-7.2-5.8-13-13-13z"/></defs><use xlink:href="#a" overflow="visible" fill="#DE7047"/><clipPath id="b"><use xlink:href="#a" overflow="visible"/></clipPath><path opacity=".15" clip-path="url(#b)" fill="#DEDCD9" d="M0 18.3h42v36H0z"/><g clip-path="url(#b)"><path fill="#FFF" d="M27 51.3c-1.3 0-2.8-.5-4.5-1.5l-1.5-.9-1.5.9c-1.7 1-3.2 1.5-4.5 1.5-4.8 0-12-8-12-20 0-5.5 4.5-10 10-10 2.6 0 5 1.1 6.5 1.9l1.5.9 1.5-.9c1.5-.9 3.9-1.9 6.5-1.9 5.5 0 10 4.5 10 10 0 12-7.2 20-12 20z"/><path opacity=".3" fill="#F7D11A" d="M27 51.3c-1.3 0-2.8-.5-4.5-1.5l-1.5-.9-1.5.9c-1.7 1-3.2 1.5-4.5 1.5-4.8 0-12-8-12-20 0-5.5 4.5-10 10-10 2.6 0 5 1.1 6.5 1.9l1.5.9 1.5-.9c1.5-.9 3.9-1.9 6.5-1.9 5.5 0 10 4.5 10 10 0 12-7.2 20-12 20z"/></g><path clip-path="url(#b)" fill="#231F20" fill-opacity=".2" d="M43.1 56.9L21 56.1v-39l22.1-.3z"/><path fill="#80B34F" d="M32 0l-6.8 4C22.5 5.5 21 8.3 21 11.4v7.7l6.8-4c2.7-1.6 4.2-4.3 4.2-7.4V0z"/><path fill="#93684E" d="M15 38.3c0-2 2.1-3.9 4-5v5c0 1.1-.9 2-2 2s-2-.9-2-2zm12 0c0-2-2.1-3.9-4-5v5c0 1.1.9 2 2 2s2-.9 2-2z"/></svg>');
  }

  @else if ($name == 'avocado') {
    $background: svg-url('<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="42" height="58.1" viewBox="0 0 42 58.1"><defs><path id="a" d="M42 15.1C42 6.8 35.2 0 26.9 0c-5.6 0-10.5 3-13.1 7.6-1.3 2.2-7.3 12.7-11 19C1 29.7 0 33.2 0 37.1c0 11.6 9.4 21 21 21s21-9.4 21-21v-22z"/></defs><use xlink:href="#a" overflow="visible" fill="#80b34f"/><clipPath id="b"><use xlink:href="#a" overflow="visible"/></clipPath><path d="M21 55.1c-9.9 0-18-8.1-18-18 0-3.2.8-6.3 2.4-9 2.4-4.1 5.7-10 8.2-14.2l2.8-4.8C18.5 5.3 22.6 3 26.9 3 33.6 3 39 8.4 39 15.1V37c0 10-8.1 18.1-18 18.1z" clip-path="url(#b)" fill="#bcd676"/><path opacity=".15" clip-path="url(#b)" fill="#006838" d="M15.3 58.1H42V.1H30.8z"/><path d="M30.3 38.4c-1.3 5-6.4 7.7-11.4 6.3-5-1.3-8-6.2-6.7-11.2 1.3-5 7.4-10.2 12-8.9 4.7 1.3 7.4 8.8 6.1 13.8z" clip-path="url(#b)" fill-rule="evenodd" clip-rule="evenodd" fill="#d99a57"/><path d="M24.2 24.6c4.7 1.3 7.4 8.8 6 13.8-1.3 5-6.4 7.7-11.4 6.3l5.4-20.1z" opacity=".5" clip-path="url(#b)" fill-rule="evenodd" clip-rule="evenodd" fill="#93684e"/></svg>');
  }

  @else {
    $background: url('../svgo/#{$name}.svg');
  }
  
  div[id='#{$name}'] {
      order: $order;
      background-image: $background;
      background-size: $width, 0, contain;
  }
}

@function svg-url($svg){
    //    
    //  Chunk up string in order to avoid 
    //  "stack level too deep" error
    //     
    $encoded:'';
    $slice: 2000;
    $index: 0;
    $loops: ceil(str-length($svg)/$slice);
    @for $i from 1 through $loops {
        $chunk: str-slice($svg, $index, $index + $slice - 1); 
        //
        //   Encode (may need a few extra replacements)
        //
        $chunk: str-replace($chunk,'"','\'');
        $chunk: str-replace($chunk,'<','%3C');
        $chunk: str-replace($chunk,'>','%3E');
        $chunk: str-replace($chunk,'&','%26');
        $chunk: str-replace($chunk,'#','%23');       
        $encoded: #{$encoded}#{$chunk};
        $index: $index + $slice; 
    }
    @return url("data:image/svg+xml;charset=utf8,#{$encoded}");   
}
            
// Helper function to replace characters in a string
@function str-replace($string, $search, $replace: '') {
    $index: str-index($string, $search); 
    @if $index { 
        @return str-slice($string, 1, $index - 1) + $replace + 
            str-replace(str-slice($string, $index + 
            str-length($search)), $search, $replace); 
    }
    @return $string; 
}